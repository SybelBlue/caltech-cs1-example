submit_to: spec/giftcard_spec.rb
prompt: |
  <markdown>
  Now, we would like to DRY out our code by using the `before(:each)` block.
  Arrange the common lines of the previous tests into the `before` block with the
  unique lines in their own `it` blocks. The verification criteria from the 
  previous question is repeated here for your convenience.  
    
  In this question, construct tests that verify:
  * a withdrawal when there is enough cash returns success
  * a withdrawal when there is enough cash changes the card balance
  * a withdrawal when there is enough cash does not produce an error message
  --- 
  </markdown>

solution:
  pre: |
    describe GiftCard do
      describe 'creating' do
        it 'errors with negative balance' do
          expect { GiftCard.new(-1) }.to raise_error(ArgumentError)
        end
        it 'successfully assigns a positive balance' do
          gift_card = GiftCard.new(20)
          expect(gift_card.balance).to eq(20)
        end
      end
      describe 'withdrawing with sufficient balance' do
  lines: |
        before(:each) do #given0
          @gift_card = GiftCard.new(20)
          @result = @gift_card.?withdraw?(15)
        end
        it 'returns truthy value' do
          expect(@result).to ?be_truthy?
        end
        it 'changes the balance' do
          expect(@gift_card.?balance?).to eq(5)
        end
        it 'does not result in error message' do
          expect(@gift_card.?error?).to be_empty
        end
  post: |+2
      end
    end
mutations:
  wrong_balance_check:
    files:
      giftcard.rb: |
        11c11
        <     if @balance >= amount
        ---
        >     if @balance < amount
  wrong_balance_change:
    files:
      giftcard.rb: |
        12c12
        <       @balance -= amount
        ---
        >       @balance += amount
  wrong_erroring:
    files:
      giftcard.rb: |
        12c12
        <       @balance -= amount
        ---
        >       @error = 'not empty'
