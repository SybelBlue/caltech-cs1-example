submit_to: spec/giftcard_spec.rb
prompt: |
  <markdown>
  Your app manages online gift cards for a soon-to-be-major e-tailer.
  Customers can use the app to place orders using their card
  balance.  
    
  We have classes that model the GiftCard and the Customer.  Your task
  is to write a test suite for them.
    
  In this question, construct tests that verify:
  * a GiftCard when first created has a non-negative cash balance
  * a GiftCard when first created assigns itself a balance
  ---
  </markdown>
  <!-- 
  * a withdrawal when there is enough cash returns success, and changes 
  the card balance <br />
  * a withdrawal when there is not enough cash returns failure, provides 
  an error message explaining the failure, and does not change the card balance. <br />
  -->

solution:
  pre: |
    describe GiftCard do
  lines: | 
      it 'fails to instantiate with negative balance' do
        expect ?{ GiftCard.new?(-1)? }?.?to? raise_error(ArgumentError)
      end
      it 'successfully assigns a positive balance on instantiation' do
        gift_card = GiftCard.new(20)
        ?expect?(gift_card.balance).to ?eq?(20)
      end
  post: |
    end
mutations:
  wrong_withdraw_check:
    files:
      giftcard.rb: |
        4c4
        <     if balance < 0
        ---
        >     if balance >= 0
  initialize_balance_incorrectly:
    files:
      giftcard.rb: |
        7c7
        <     @balance = balance
        ---
        >     @balance = -balance
  non_nil_error_initialization:
    files:
      giftcard.rb: |
        8c8
        <     @error = nil
        ---
        >     @error = 'not nil'
